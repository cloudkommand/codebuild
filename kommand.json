{
    "components": {
        "cb-policy": {
            "type": "@iam.policy",
            "document": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents",
                        "s3:ListBucket",
                        "s3:GetBucketAcl",
                        "s3:GetBucketLocation",
                        "s3:PutObject",
                        "s3:GetObjectVersion",
                        "s3:GetObject",
                        "codebuild:CreateReportGroup",
                        "codebuild:CreateReport",
                        "codebuild:UpdateReport",
                        "codebuild:BatchPutTestCases",
                        "codebuild:BatchPutCodeCoverages",
                        "ecr:BatchImportUpstreamImage",
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:CompleteLayerUpload",
                        "ecr:DescribeImages",
                        "ecr:GetAuthorizationToken",
                        "ecr:InitiateLayerUpload",
                        "ecr:PutImage",
                        "ecr:UploadLayerPart"
                    ],
                    "Resource": "*"
                }]
            }
        },
        "cb-role": {
            "type": "@iam.role",
            "role_services": ["codebuild"],
            "policies": ["@cb-policy"],
            "include_basic_lambda_policy": false
        },
        "project": {
            "type": "ext",
            "displayname": "CK CodeBuild Project",
            "description": "Deploys a CodeBuild project",
            "cloud": "AWS",
            "resources": [
                "AWS::codebuild::project"
            ],
            "environment_variables": {
                "codebuild_role_arn": "@cb-role:props.arn"
            },
            "ck_plugin_tier": 3,
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "codebuild:CreateProject",
                        "codebuild:UpdateProject",
                        "codebuild:DeleteProject",
                        "codebuild:BatchGetProjects"
                    ],
                    "Resource": "*"
                }, {
                    "Sid": "Role",
                    "Effect": "Allow",
                    "Action": [
                        "iam:PassRole"
                    ],
                    "Resource": "@cb-role:props.arn"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the codebuild project. If not present this name will be auto-generated."
                    },
                    "s3_bucket": {
                        "type": "string",
                        "description": "The name of the S3 bucket where the source code is stored."
                    },
                    "s3_object": {
                        "type": "string",
                        "description": "The name of the S3 object where the source code is stored."
                    },
                    "build_container_size": {
                        "type": "string",
                        "description": "The size of the codebuild container. Can speed up builds if you expect them to take a long time.",
                        "enum": ["small", "medium", "large", "2xlarge"],
                        "default": "large"
                    },
                    "container_image": {
                        "type": "string",
                        "description": "The docker image to use for the build container. This is set based on runtime_versions, but can be overridden here."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "The artifacts to be produced by the build.",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of artifacts to be produced by the build.",
                                "enum": ["CODEPIPELINE", "NO_ARTIFACTS", "S3"]
                            },
                            "location": {
                                "type": "string",
                                "description": "The output bucket name, if the type is S3."
                            },
                            "path": {
                                "type": "string",
                                "description": "The S3 object prefix, if the type is S3."
                            },
                            "namespace_type": {
                                "type": "string",
                                "description": "If set to build ID, '<Build ID>/' will be appended to the S3 object prefix. If set to none, no prefix will be appended.",
                                "enum": ["NONE", "BUILD_ID"],
                                "default": "NONE"
                            },
                            "name": {
                                "type": "string",
                                "description": "The filename of the artifact. If set to '/' the artifact(s) will be stored in the root of the bucket."
                            },
                            "packaging": {
                                "type": "string",
                                "description": "The type of artifact packaging to use. If set to NONE, no packaging will be performed.",
                                "enum": ["NONE", "ZIP"],
                                "default": "NONE"
                            },
                            "encryptionDisabled": {
                                "type": "boolean",
                                "description": "If set to true, the output artifacts will not be encrypted.",
                                "default": false
                            }
                        },
                        "required": ["type"]
                    },
                    "environment_variables": {
                        "type": "object",
                        "description": "Key-value pairs of environment variables to set in the codebuild project.",
                        "common": true
                    },
                    "privileged_mode": {
                        "type": "boolean",
                        "description": "If set to true, the codebuild project will run in privileged mode. Should only be set to true if you are building docker images.",
                        "common": true
                    },
                    "runtime_versions": {
                        "type": "object",
                        "description": "The dictionary of runtime versions you need to build your app. The key is the runtime name and the value is the version. For example, {\"python\": \"3.7\"}.",
                        "common": true
                    },
                    "install_commands": {
                        "type": "array",
                        "description": "Commands installing required libraries/packages before a build is run.",
                        "common": true,
                        "default": []
                    },
                    "pre_build_commands": {
                        "type": "array",
                        "description": "Commands to run before a build is run.",
                        "default": []
                    },
                    "build_commands": {
                        "type": "array",
                        "description": "Build commands.",
                        "common": true,
                        "default": []
                    },
                    "post_build_commands": {
                        "type": "array",
                        "description": "Commands to run after a build is run.",
                        "default": []
                    },
                    "buildspec_artifacts": {
                        "type": "object",
                        "description": "The artifacts to be built by the codebuild project.",
                        "common": true,
                        "default": {}
                    }
                },
                "required": ["artifacts", "s3_bucket", "s3_object"]
            },
            "props": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the codebuild project"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the codebuild project"
                },
                "buildspec_hash": {
                    "type": "string",
                    "description": "The hash of the buildspec"
                }
            },
            "examples": [
                {
                    "displayname": "Build a Go Lambda Function",
                    "notes": "This assumes the Lambda handler is main.go, but otherwise it is quite generic. This specific value for buildspec_artifacts copies all files. Could use references for s3_bucket and location inside artifacts.",
                    "definition": {
                        "type": "&codebuild.project",
                        "s3_bucket": "source-bucket-name",
                        "s3_object": "object-key",
                        "runtime_versions": {"golang": 1.16},
                        "build_commands": ["go build main.go"],
                        "buildspec_artifacts": {"files": ["**/*"]},
                        "artifacts": {
                            "type": "S3",
                            "location": "output-bucket-name",
                            "path": "go-lambdas", 
                            "name": "build-2010-01-01.zip",
                            "packaging": "ZIP"
                        }
                    }
                },
                {
                    "displayname": "Build ECR Container",
                    "notes": "In this case, we have no buildspec_artifacts since the image is being pushed to ECR. This only sets up a single tag, latest, and note privileged mode is required to build docker images.",
                    "definition": {
                        "type": "&codebuild.project",
                        "s3_bucket": "source-bucket-name",
                        "s3_object": "object-key",
                        "environment_variables": {
                            "AWS_DEFAULT_REGION": "us-east-1",
                            "AWS_ACCOUNT_ID": "123456789012",
                            "IMAGE_REPO_NAME": "my-existing-ecr-repo"
                        },
                        "pre_build_commands": [
                            "echo Logging in to Amazon ECR...",
                            "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
                        ],
                        "build_commands": [
                            "echo Build started on `date`",
                            "docker build -t $IMAGE_REPO_NAME .",
                            "echo Build completed on `date`",
                            "echo Pushing the Docker image...",
                            "docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"
                        ],
                        "container_image": "aws/codebuild/standard:6.0",
                        "privileged_mode": true
                    }
                }
            ]
        }
    },
    "repos": {
        "iam": "https://github.com/cloudkommand/iam"
    }
}
